{"version":3,"sources":["components/Burger/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Layout/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Layout/Modal/Modal.js","components/Layout/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/containers/BurgerBuilder/BurgerBuilder.js","App.js","serviceWorker.js","index.js","assets/images/burger-logo.png"],"names":["logo","props","className","style","height","src","burgerLogo","alt","navigationItem","href","link","children","navigationItems","NavigationItem","drawerToggle","onClick","clicked","toolbar","DrawerToggle","drawerToggleClicked","Logo","NavigationItems","backdrop","show","sideDrawer","attachedClasses","open","Backdrop","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","Toolbar","this","SideDrawer","Component","BurgerIngredient","ingredient","type","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","buildControl","label","removed","disabled","added","controls","buildControls","price","toFixed","ctrl","BuildControl","ingrinientAdded","ingredientRemoved","purchasable","ordered","modal","modalClosed","transform","opacity","button","btnType","orderSummary","ingredientSummary","textTransform","Button","purchaseCancelled","purchaseContinued","ingrednient_prices","salad","cheese","meat","bacon","BurgerBuilder","totalPrice","purchasing","addIngredientHandler","updatedCount","updatedIngridients","priceAddition","newPrice","updatePurchaseState","removeIngredientHandler","oldCount","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","order","customer","name","address","street","zipCode","email","fetch","method","body","JSON","stringify","then","resp","json","console","log","catch","error","sum","disabledInfo","Modal","OrderSummary","Burger","BuildControls","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.3a1c5c52.chunk.js","sourcesContent":["import React from 'react';\n\nimport burgerLogo from '../../../assets/images/burger-logo.png';\n\nconst logo = (props) => (\n    <div className='Logo'\n        style={{height: props.height}}>\n        <img src={burgerLogo} alt='BurgerBuilder'/>\n    </div>\n\n);\n\nexport default logo;","import React from 'react';\n\nconst navigationItem = (props) => (\n    <li className='NavigationItem'>\n        <a \n        href={props.link}\n        >{props.children}</a></li>\n);\n\nexport default navigationItem;","import React from 'react';\n\nimport NavigationItem from './NavigationItem/NavigationItem'\n\nconst navigationItems = () => (\n    <ul className='NavigationItems'>\n        < NavigationItem link='/' >Burger Builder</ NavigationItem>\n        < NavigationItem link='/'>Checkout</ NavigationItem>\n    </ul>\n);\n\nexport default navigationItems;","import React from 'react';\n\nconst drawerToggle = (props) => (\n    <div className='DrawerToggle' onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawerToggle;","import React from 'react';\n\nimport Logo from '../../Burger/Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\n\nconst toolbar = props => (\n    <header className='Toolbar'>\n        <DrawerToggle clicked={props.drawerToggleClicked}/>\n        < Logo height='80%'/>\n        <nav className='DesktopOnly'>\n            <NavigationItems />\n        </nav>\n    </header>\n);\n\nexport default toolbar;","import React from 'react';\n\nconst backdrop = (props) => (\n    props.show ? <div className='Backdrop' onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React from 'react';\n\nimport Backdrop from '../../Layout/Backdrop/Backdrop';\n\nimport Logo from '../../Burger/Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\n\nconst sideDrawer = (props) => {\n    let attachedClasses = ['SideDrawer', 'Close'];\n    if (props.open) {\n        attachedClasses = ['SideDrawer', 'Open']\n    }\n\n    return(\n        <>\n            <Backdrop show={props.open} clicked={props.closed}/>\n            <div className={attachedClasses.join(' ')}>\n                <Logo height='11%'/>\n                <nav>\n                    <NavigationItems />\n                </nav>\n            </div>\n        </>\n\n    );\n};\n\nexport default sideDrawer;","import React, {Component} from 'react';\n\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer';\n\nclass Layout extends Component {\n    state = {\n        showSideDrawer: false\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState({showSideDrawer: false});\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState((prevState) => { return {showSideDrawer: !prevState.showSideDrawer}\n    });\n    }\n    render() {\n        return (\n            <div>\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler}/>\n                <SideDrawer \n                    open={this.state.showSideDrawer} \n                    closed={this.sideDrawerClosedHandler}/>\n                <main className='content'>\n                    {this.props.children}\n                </main>\n             </div>\n        )\n    }\n}\nexport default Layout;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nclass BurgerIngredient extends Component {\n    render(){\n\n        let ingredient = null;\n        \n        switch (this.props.type) {\n            case ('bread-bottom'):\n                ingredient = <div className='BreadBottom'></div>\n                break;\n            case ('bread-top'):\n                ingredient = (\n                    <div className='BreadTop'>\n                        <div className='Seeds1'></div>\n                        <div className='Seeds2'></div>\n                    </div>\n                );\n                break;\n            case ('meat'):\n                ingredient = <div className='Meat'></div>\n                break;\n                case ('cheese'):\n                    ingredient = <div className='Cheese'></div>\n                    break; \n                case ('salad'):\n                    ingredient = <div className='Salad'></div>\n                    break;      \n                case ('bacon'):\n                    ingredient = <div className='Bacon'></div>\n                    break;\n                default:\n                    ingredient = null;\n        }\n        return ingredient;\n    }\n};\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n};\n\nexport default BurgerIngredient;","import React from 'react';\n\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient'\n\nconst burger = (props) => {\n    let transformedIngredients = Object.keys(props.ingredients).map(igKey => {\n        return [...Array(props.ingredients[igKey])].map((_, i) => {\n            return <BurgerIngredient key={igKey + i} type={igKey} />\n        });\n    })\n    .reduce((arr,el) => {\n        return arr.concat(el)\n    }, []);\n    if (transformedIngredients.length === 0) {\n        transformedIngredients = <p>Please start adding ingredients</p>\n    }\n    return (\n        <div className='Burger'>\n            <BurgerIngredient type='bread-top'/>\n            {transformedIngredients}\n            <BurgerIngredient type='bread-bottom'/>\n        </div>\n    );\n};\n\nexport default burger;","import React from 'react';\n\nconst buildControl = (props) => (\n    <div className='BuildControl'>\n        <div className='Label'>{props.label}</div>\n        <button \n            className='Less' \n            onClick={props.removed} \n            disabled={props.disabled}>Less</button>\n        <button \n            className='More' \n            onClick={props.added}>More</button>\n    </div>\n);\n\nexport default buildControl;","import React from 'react';\n\nimport BuildControl from './BuildControl/BuildControl'\n\nconst controls = [\n    {label: 'Salad', type: 'salad'},\n    {label: 'Bacon', type: 'bacon'},\n    {label: 'Cheese', type: 'cheese'},\n    {label: 'Meat', type: 'meat'},\n];\nconst buildControls = (props) => (\n    <div className='BuildControls'>\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\n        {controls.map(ctrl => (\n            <BuildControl \n            key={ctrl.label} \n            label={ctrl.label}\n            added= {()=>props.ingrinientAdded(ctrl.type)}\n            removed= {()=>props.ingredientRemoved(ctrl.type)}\n            disabled = {props.disabled[ctrl.type]} />\n        ))}\n        <button \n        className='OrderButton'\n        disabled={!props.purchasable}\n        onClick={props.ordered}>ORDER NOW</button>\n    </div>\n\n);\n\nexport default buildControls;","import React from 'react';\n\nimport Backdrop from '../Backdrop/Backdrop'\nconst modal = (props)  => (\n    <>\n        <Backdrop show={props.show} clicked={props.modalClosed}/>\n        <div \n            className='Modal'\n            style={{transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n            opacity: props.show ? '1' : '0'\n            }}>\n            {props.children}\n        </div>\n    </>\n    \n);\n\nexport default modal;","import React from 'react';\n\nconst button = (props) => (\n<button \nonClick={props.clicked}\nclassName={[props.btnType, 'Button'].join(' ')} >{props.children}</button>\n);\n\nexport default button;","import React from 'react';\n\nimport Button from '../../Layout/Button/Button'\n\nconst orderSummary = (props) => {\n    const ingredientSummary = Object.keys(props.ingredients).map(igKey => {\n        return (<li key={igKey}><span style={{textTransform: 'capitalize'}}>{igKey}</span>: {props.ingredients[igKey]}</li>);\n    });\n    return (\n        <>\n            <h2>Your Order</h2>\n            <p>A delicious burger with the following integridients:</p>\n            <ul>\n                {ingredientSummary}\n            </ul>\n            <p><strong>Total price: {props.price.toFixed(2)}</strong></p>\n            <p>Continue to Checkout?</p>\n            <Button btnType='Danger' clicked={props.purchaseCancelled}>CANCEL</Button>\n            <Button btnType='Success' clicked={props.purchaseContinued}>CONTINUE</Button>\n        </>\n    )\n};\n\nexport default orderSummary;","import React, {Component} from 'react';\n\nimport Burger from '../../Burger/Burger';\nimport BuildControls from '../../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../Layout/Modal/Modal';\nimport OrderSummary from '../../Burger/OrderSummary/OrderSummary'\n\n\nconst ingrednient_prices = {\n    salad: 0.4,\n    cheese: 0.5,\n    meat: 1.3,\n    bacon: 0.7\n}\n\nclass BurgerBuilder extends Component {\n    state = {\n        ingredients: {\n            salad: 0,\n            bacon: 0,\n            cheese:0,\n            meat: 0\n        },\n        totalPrice: 4,\n        purchasable: false,\n        purchasing: false\n    }\n\n    updatePurchaseState (ingredients) {\n        const sum = Object.keys(ingredients).map (igKey => {\n            return ingredients[igKey]\n        }).reduce((sum, el) => {\n            return sum + el;\n        })\n        this.setState({purchasable: sum > 0})\n    }\n\n\n    addIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        const updatedCount = oldCount + 1;\n        const updatedIngridients = {...this.state.ingredients};\n        updatedIngridients[type] = updatedCount;\n\n        const priceAddition = ingrednient_prices[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({totalPrice: newPrice, ingredients: updatedIngridients});\n        this.updatePurchaseState(updatedIngridients);\n    };\n    \n\n    removeIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        if (oldCount <=0) {\n            return;\n        };\n        const updatedCount = oldCount - 1;\n        const updatedIngridients = {...this.state.ingredients};\n        updatedIngridients[type] = updatedCount;\n        const priceDeduction = ingrednient_prices[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceDeduction;\n        this.setState({totalPrice: newPrice, ingredients: updatedIngridients});\n        this.updatePurchaseState(updatedIngridients);\n    }\n\n    purchaseHandler = () => {\n        this.setState({purchasing: true});\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({purchasing: false});\n    }\n\n    purchaseContinueHandler = () => {\n        //alert ('You continue');\n        const order = {\n            ingredients: this.state.ingredients,\n            price: this.state.totalPrice,\n            customer: {\n                name: 'Tester',\n                address: {\n                    street: 'Teststreet 1',\n                    zipCode: '12345'\n                },\n                email: 'test@test.com'\n            }\n       \n        }\n        fetch('https://burgerbuilder-166a2.firebaseio.com/orders',{\n            method: 'POST', \n            body: JSON.stringify({order})})\n        .then(resp => resp.json())\n        .then(resp => \n            console.log(resp))\n        .catch(error => console.log(error));    \n    \n    }\n\n    render (){\n        const disabledInfo = {\n            ...this.state.ingredients\n        }\n        for (let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n            //zwraca true lub false {salad: true, meat: false, ...}\n        return (\n            <>\n                <Modal \n                show={this.state.purchasing}\n                modalClosed={this.purchaseCancelHandler}>\n                    <OrderSummary \n                    ingredients={this.state.ingredients}\n                    purchaseCancelled={this.purchaseCancelHandler}\n                    purchaseContinued={this.purchaseContinueHandler}\n                    price={this.state.totalPrice}/>\n                </Modal>\n                < Burger ingredients={this.state.ingredients}/>\n                < BuildControls \n                    ingrinientAdded = {this.addIngredientHandler}\n                    ingredientRemoved = {this.removeIngredientHandler}\n                    disabled = {disabledInfo}\n                    price = {this.state.totalPrice}\n                    purchasable = {this.state.purchasable}\n                    ordered={this.purchaseHandler}/>\n            </>\n        );\n    }\n};\n\nexport default BurgerBuilder;","import React from 'react';\n\nimport Layout from './components/Layout/Layout'\nimport BurgerBuilder from './components/containers/BurgerBuilder/BurgerBuilder'\n\nfunction App() {\n  return(\n    <>\n      <Layout>\n        <BurgerBuilder />\n      </Layout>\n    </>\n  )\n\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"./scss/main.scss\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";"],"sourceRoot":""}